@model deneme.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control", @id="txtCustID" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeID, "EmployeeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control", @id ="txtEmpID"})
                @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control", @id = "txtShipName"} })
                @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control", @id = "txtShipCity" } })
                @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control", @id = "txtShipCountry"} })
                @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>


   $(document).ready(function () {
    console.log("hi there");

    //function click() {
        $("#btnSave").on('click', function () {
             console.log('clicked');

            var order = {
                'CustomerID': $('#txtCustID').val(),
                    'EmployeeId' : $('#txtEmpID').val(),
                'ShipName': $('#txtShipName').val(),
                 'ShipCity' : $('#txtShipCity').val(),
                 'ShipCountry' : $('#txtShipCountry').val()
             }
             $.ajax(
                 {
                     type: 'POST',
                     data: JSON.stringify({ model: order }),
                     url: '/Orders/Create', // Controller/View
                     method: 'POST',

                     contentType: "text/html",
                 //standardSubmit: false,
                //contentType: "text/html",

                success: function (response) {
                    console.log("ALO");
                    response = response.response;
                    if (response == "true") {
                        alert("succesfull");
                        console.log("very well");
                    }
                    else {
                        alert("failed");
                        console.log("not received")
                    }
                }
            });
        });
   // }
 });


</script>